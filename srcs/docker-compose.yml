version: "1.0"

services:
  nginx:
    build:
      context: ./requirements/nginx
    image: katchogl/nginx:1.0
    container_name: nginx
    depends_on: [ wordpress ]
    volumes: [ wordpressv:/var/www/html/wordpress:ro ]
    networks: [ docker-network ]
    ports: [ 443:443 ]
    restart: unless-stopped

  wordpress:
    build:
      context: ./requirements/wordpress
      args:
        WORDPRESS_ADMIN: ${WORDPRESS_ADMIN}
        WORDPRESS_ADMIN_PASSWORD: ${WORDPRESS_ADMIN_PASSWORD}
        WORDPRESS_DB: ${WORDPRESS_DB}
        WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
    image: katchogl/wordpress:1.0
    container_name: wordpress
    depends_on: [ mariadb ]
    volumes: [ wordpressv:/var/www/html/wordpress ]
    networks: [ docker-network ]
    restart: unless-stopped
   
  mariadb:
    build:
      context: ./requirements/mariadb
      args:
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        WORDPRESS_ADMIN: ${WORDPRESS_ADMIN}
        WORDPRESS_ADMIN_PASSWORD: ${WORDPRESS_ADMIN_PASSWORD}
        WORDPRESS_DB: ${WORDPRESS_DB}
    image: katchogl/mariadb:1.0
    container_name: mariadb
    volumes: [ mysql-wordpressv:/var/lib/mysql/wordpress ]
    networks: [ docker-network ]
    restart: unless-stopped

networks:
  docker-network:
    driver: bridge

volumes:
  wordpressv:
    driver: local
    driver_opts:
     type: none
     device: /home/katchogl/data/wordpressv
     o: bind

  mysql-wordpressv:
    driver: local
    driver_opts:
     type: none
     device: /home/katchogl/data/mysql-wordpressv
     o: bind
